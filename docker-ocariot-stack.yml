version: "3.7"
services:
  vault:
    hostname: vault
    image: vault:1.3.3
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 15s
        max_attempts: 15
    environment:
      - RABBITMQ_MGT_BASE_URL=https://rabbitmq:15671
      - VAULT_ADDR=https://localhost:8200
      - VAULT_SKIP_VERIFY=true
    volumes:
      - type: bind
        source: ./config/ocariot/vault/.keys
        target: /etc/vault/.keys
      - type: bind
        source: ./config/ocariot/vault/policies
        target: /etc/vault/policies/
      - type: bind
        source: ./config/ocariot/vault/.tokens
        target: /etc/vault/.tokens/
    command: initializing_vault.sh
    configs:
      - source: ocariot-vault-config
        target: /etc/vault/config.hcl
        mode: 0400
      - source: ocariot-init-vault-config
        target: /usr/bin/initializing_vault.sh
        mode: 0100
      - source: ocariot-create-token-vault-config
        target: /etc/vault/scripts/create_tokens.sh
        mode: 0100
      - source: ocariot-remove-token-vault-config
        target: /etc/vault/scripts/remove_tokens.sh
        mode: 0100
    secrets:
      - source: consul-ca-cert
        target: /etc/consul/.certs/ca.crt
        mode: 0400
      - source: consul-client-key
        target: /etc/consul/.certs/client.key
        mode: 0400
      - source: consul-client-cert
        target: /etc/consul/.certs/client.key.pub
        mode: 0400
      - source: vault-ca-cert
        target: /etc/vault/.certs/ca.crt
        mode: 0400
      - source: vault-server-key
        target: /etc/vault/.certs/server.key
        mode: 0400
      - source: vault-server-cert
        target: /etc/vault/.certs/server.cert
        mode: 0400
    depends_on:
      - consul
    networks:
      - ocariot
    logging:
      driver: json-file
      options:
        max-size: 100m

  consul:
    hostname: consul
    image: consul:1.7.1
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 15s
        max_attempts: 15
    volumes:
      - type: volume
        source: consul-data
        target: /consul/data
    command:
      - sh
      - -c
      - consul agent -config-dir=/consul/config
    configs:
      - source: ocariot-consul-config
        target: /consul/config/config.json
    secrets:
      - source: consul-ca-cert
        target: /etc/consul/.certs/ca.crt
        mode: 0400
      - source: consul-server-key
        target: /etc/consul/.certs/server.key
        mode: 0400
      - source: consul-server-cert
        target: /etc/consul/.certs/server.cert
        mode: 0400
    depends_on:
      - vault
    networks:
      - ocariot
    logging:
      driver: json-file
      options:
        max-size: 100m

  psmdb-account:
    hostname: psmdb-account
    image: percona/percona-server-mongodb:latest
    user: root
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 15s
        max_attempts: 15
    environment:
      - VAULT_BASE_URL=https://vault:8200
    volumes:
      - type: volume
        source: psmdb-account-data
        target: /data/db
      - type: bind
        source: ./config/ocariot/vault/.tokens/access-token-psmdb-account
        target: /tmp/access-token-psmdb-account
    command: initializing_psmdb.sh
    configs:
      - source: ocariot-mongo-config
        target: /tmp/base_conf_mongod
        mode: 400
      - source: ocariot-init-psmdb-config
        target: /usr/bin/initializing_psmdb.sh
        mode: 0100
    secrets:
      - source: vault-ca-cert
        target: /tmp/vault/ca.crt
        mode: 0400
    depends_on:
      - vault
    networks:
      - ocariot
    logging:
      driver: json-file
      options:
        max-size: 100m

  psmdb-iot-tracking:
    hostname: psmdb-iot-tracking
    image: percona/percona-server-mongodb:latest
    user: root
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 15s
        max_attempts: 15
    environment:
      - VAULT_BASE_URL=https://vault:8200
    volumes:
      - type: volume
        source: psmdb-iot-tracking-data
        target: /data/db
      - type: bind
        source: ./config/ocariot/vault/.tokens/access-token-psmdb-iot-tracking
        target: /tmp/access-token-psmdb-iot-tracking
    command: initializing_psmdb.sh
    configs:
      - source: ocariot-mongo-config
        target: /tmp/base_conf_mongod
        mode: 400
      - source: ocariot-init-psmdb-config
        target: /usr/bin/initializing_psmdb.sh
        mode: 0100
    secrets:
      - source: vault-ca-cert
        target: /tmp/vault/ca.crt
        mode: 0400
    depends_on:
      - vault
    networks:
      - ocariot
    logging:
      driver: json-file
      options:
        max-size: 100m

  psmdb-ds-agent:
    hostname: psmdb-ds-agent
    image: percona/percona-server-mongodb:latest
    user: root
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 15s
        max_attempts: 15
    environment:
      - VAULT_BASE_URL=https://vault:8200
    volumes:
      - type: volume
        source: psmdb-ds-agent-data
        target: /data/db
      - type: bind
        source: ./config/ocariot/vault/.tokens/access-token-psmdb-ds-agent
        target: /tmp/access-token-psmdb-ds-agent
    command: initializing_psmdb.sh
    configs:
      - source: ocariot-mongo-config
        target: /tmp/base_conf_mongod
        mode: 400
      - source: ocariot-init-psmdb-config
        target: /usr/bin/initializing_psmdb.sh
        mode: 0100
    secrets:
      - source: vault-ca-cert
        target: /tmp/vault/ca.crt
        mode: 0400
    depends_on:
      - vault
    networks:
      - ocariot
    logging:
      driver: json-file
      options:
        max-size: 100m

  psmdb-quest:
    hostname: psmdb-quest
    image: percona/percona-server-mongodb:latest
    user: root
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 15s
        max_attempts: 15
    environment:
      - VAULT_BASE_URL=https://vault:8200
    volumes:
      - type: volume
        source: psmdb-quest-data
        target: /data/db
      - type: bind
        source: ./config/ocariot/vault/.tokens/access-token-psmdb-quest
        target: /tmp/access-token-psmdb-quest
    command: initializing_psmdb.sh
    configs:
      - source: ocariot-mongo-config
        target: /tmp/base_conf_mongod
        mode: 400
      - source: ocariot-init-psmdb-config
        target: /usr/bin/initializing_psmdb.sh
        mode: 0100
    secrets:
      - source: vault-ca-cert
        target: /tmp/vault/ca.crt
        mode: 0400
    depends_on:
      - vault
    networks:
      - ocariot
    logging:
      driver: json-file
      options:
        max-size: 100m

  psmdb-gamification:
    hostname: psmdb-gamification
    image: percona/percona-server-mongodb:latest
    user: root
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 15s
        max_attempts: 15
    environment:
      - VAULT_BASE_URL=https://vault:8200
    volumes:
      - type: volume
        source: psmdb-gamification-data
        target: /data/db
      - type: bind
        source: ./config/ocariot/vault/.tokens/access-token-psmdb-gamification
        target: /tmp/access-token-psmdb-gamification
    command: initializing_psmdb.sh
    configs:
      - source: ocariot-mongo-config
        target: /tmp/base_conf_mongod
        mode: 400
      - source: ocariot-init-psmdb-config
        target: /usr/bin/initializing_psmdb.sh
        mode: 0100
    secrets:
      - source: vault-ca-cert
        target: /tmp/vault/ca.crt
        mode: 0400
    depends_on:
      - vault
    networks:
      - ocariot
    logging:
      driver: json-file
      options:
        max-size: 100m

  psmdb-food:
    hostname: psmdb-food
    image: percona/percona-server-mongodb:latest
    user: root
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 15s
        max_attempts: 15
    environment:
      - VAULT_BASE_URL=https://vault:8200
    volumes:
      - type: volume
        source: psmdb-food-data
        target: /data/db
      - type: bind
        source: ./config/ocariot/vault/.tokens/access-token-psmdb-food
        target: /tmp/access-token-psmdb-food
    command: initializing_psmdb.sh
    configs:
      - source: ocariot-mongo-config
        target: /tmp/base_conf_mongod
        mode: 400
      - source: ocariot-init-psmdb-config
        target: /usr/bin/initializing_psmdb.sh
        mode: 0100
    secrets:
      - source: vault-ca-cert
        target: /tmp/vault/ca.crt
        mode: 0400
    depends_on:
      - vault
    networks:
      - ocariot
    logging:
      driver: json-file
      options:
        max-size: 100m

  psmdb-notification:
    hostname: psmdb-notification
    image: percona/percona-server-mongodb:latest
    user: root
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 15s
        max_attempts: 15
    environment:
      - VAULT_BASE_URL=https://vault:8200
    volumes:
      - type: volume
        source: psmdb-notification-data
        target: /data/db
      - type: bind
        source: ./config/ocariot/vault/.tokens/access-token-psmdb-notification
        target: /tmp/access-token-psmdb-notification
    command: initializing_psmdb.sh
    configs:
      - source: ocariot-mongo-config
        target: /tmp/base_conf_mongod
        mode: 400
      - source: ocariot-init-psmdb-config
        target: /usr/bin/initializing_psmdb.sh
        mode: 0100
    secrets:
      - source: vault-ca-cert
        target: /tmp/vault/ca.crt
        mode: 0400
    depends_on:
      - vault
    networks:
      - ocariot
    logging:
      driver: json-file
      options:
        max-size: 100m

  psmysql-missions:
    hostname: psmysql-missions
    image: percona/percona-server:latest
    user: root
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 15s
        max_attempts: 15
    environment:
      - VAULT_BASE_URL=https://vault:8200
    volumes:
      - type: volume
        source: psmysql-missions-data
        target: /var/lib/mysql
      - type: bind
        source: ./config/ocariot/vault/.tokens/access-token-psmysql-missions
        target: /tmp/access-token-psmysql-missions
    command: initializing_psmysql.sh
    configs:
      - source: ocariot-mysql-config
        target: /etc/my.cnf
        mode: 0400
      - source: ocariot-init-psmysql-config
        target: /usr/bin/initializing_psmysql.sh
        mode: 0100
    secrets:
      - source: vault-ca-cert
        target: /tmp/vault/ca.crt
        mode: 0444
    depends_on:
      - vault
    networks:
      - ocariot
    logging:
      driver: json-file
      options:
        max-size: 100m

  redis-api-gateway:
    hostname: ocariot-redis-api-gateway
    image: redis:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 15s
        max_attempts: 15
    volumes:
      - type: volume
        source: redis-api-gateway-data
        target: /data
    configs:
      - source: ocariot-redis-config
        target: /etc/redis.conf
        mode: 0444
    command: ["redis-server", "/etc/redis.conf"]
    networks:
      - ocariot
    logging:
      driver: json-file
      options:
        max-size: 100m

  redis-ds-agent: # Redis container for the Data Sync Agent
    hostname: ocariot-redis-ds-agent
    image: redis:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 15s
        max_attempts: 15
    volumes:
      - type: volume
        source: redis-ds-agent-data
        target: /data
    configs:
      - source: ocariot-redis-config
        target: /etc/redis.conf
        mode: 0444
    command: ["redis-server", "/etc/redis.conf"]
    networks:
      - ocariot
    logging:
      driver: json-file
      options:
        max-size: 100m

  api-gateway:
    hostname: api-gateway-service
    image: ocariot/api-gateway:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 15s
        max_attempts: 15
    environment:
      - NODE_ENV=production
      - PORT_HTTP=8080
      - PORT_HTTPS=8081
      - SSL_KEY_PATH=/etc/.certs/server.key
      - SSL_CERT_PATH=/etc/.certs/server.cert
      - ISSUER=ocariot
      - API_GATEWAY_SERVICE=https://api-gateway:8081
      - ACCOUNT_SERVICE=https://account:3001
      - IOT_TRACKING_SERVICE=https://iot-tracking:4001
      - DS_AGENT_SERVICE=https://ds-agent:5001
      - QUESTIONNAIRE_SERVICE=https://quest:6001
      - GAMIFICATION_SERVICE=https://gamification:7001
      - MISSIONS_SERVICE=https://missions:8001
      - FOOD_SERVICE=https://food:9001
      - NOTIFICATION_SERVICE=https://notification:10001
      - VAULT_SERVICE=https://vault:8200
      - RABBIT_MGT_SERVICE=https://rabbitmq:15671
      - MONITOR_SERVICE=http://grafana:3000
      - API_GATEWAY_HOSTNAME=${API_GATEWAY_HOSTNAME}
      - VAULT_HOSTNAME=${VAULT_HOSTNAME}
      - RABBIT_MGT_HOSTNAME=${RABBIT_MGT_HOSTNAME}
      - MONITOR_HOSTNAME=${MONITOR_HOSTNAME}
      - EMULATE_REDIS=false
      - PORT_REDIS=6379
      - HOST_REDIS=redis-api-gateway
    command: initializing_api_gateway.sh
    volumes:
      - type: bind
        source: ./config/ocariot/vault/.tokens/access-token-api-gateway-service
        target: /tmp/access-token-api-gateway-service
    ports:
      - ${AG_PORT_HTTP}:8080
      - ${AG_PORT_HTTPS}:8081
    configs:
      - source: ocariot-init-api-gateway-config
        target: /usr/bin/initializing_api_gateway.sh
        mode: 0100
    secrets:
      - source: vault-ca-cert
        target: /tmp/vault/ca.crt
        mode: 0400
      - source: api-gateway-server-key
        target: /etc/.certs/server.key
        mode: 0400
      - source: api-gateway-server-cert
        target: /etc/.certs/server.cert
        mode: 0400
    depends_on:
      - redis-api-gateway
      - vault
    networks:
      - ocariot
    logging:
      driver: json-file
      options:
        max-size: 100m

  account:
    hostname: account-service
    image: ocariot/account:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 15s
        max_attempts: 15
    environment:
      - VAULT_BASE_URL=https://vault:8200
      - NODE_ENV=production
      - PORT_HTTP=3000
      - PORT_HTTPS=3001
      - ISSUER=ocariot
      - ADMIN_USERNAME=${ADMIN_USERNAME}
      - ADMIN_PASSWORD=${ADMIN_PASSWORD}
    volumes:
      - type: bind
        source: ./config/ocariot/vault/.tokens/access-token-account-service
        target: /tmp/access-token-account-service
    command: initializing_service.sh
    configs:
      - source: ocariot-init-service-config
        target: /usr/bin/initializing_service.sh
        mode: 0100
    secrets:
      - source: vault-ca-cert
        target: /tmp/vault/ca.crt
        mode: 0400
    depends_on:
      - psmdb-account
      - rabbitmq
      - vault
    networks:
      - ocariot
    logging:
      driver: json-file
      options:
        max-size: 100m

  iot-tracking:
    hostname: iot-tracking-service
    image: ocariot/iot-tracking:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 15s
        max_attempts: 15
    environment:
      - VAULT_BASE_URL=https://vault:8200
      - NODE_ENV=production
      - PORT_HTTP=4000
      - PORT_HTTPS=4001
    volumes:
      - type: bind
        source: ./config/ocariot/vault/.tokens/access-token-iot-tracking-service
        target: /tmp/access-token-iot-tracking-service
    command: initializing_service.sh
    configs:
      - source: ocariot-init-service-config
        target: /usr/bin/initializing_service.sh
        mode: 0100
    secrets:
      - source: vault-ca-cert
        target: /tmp/vault/ca.crt
        mode: 0400
    depends_on:
      - psmdb-iot-tracking
      - rabbitmq
      - vault
    networks:
      - ocariot
    logging:
      driver: json-file
      options:
        max-size: 100m

  ds-agent:
    hostname: ds-agent-service
    image: ocariot/ds-agent:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 15s
        max_attempts: 15
    environment:
      - VAULT_BASE_URL=https://vault:8200
      - NODE_ENV=production
      - PORT_HTTP=5000
      - PORT_HTTPS=5001
      - FITBIT_CLIENT_ID=${FITBIT_CLIENT_ID}
      - FITBIT_CLIENT_SECRET=${FITBIT_CLIENT_SECRET}
      - EXPRESSION_AUTO_SYNC=${EXPRESSION_AUTO_SYNC}
      - REDIS_URI=redis://redis-ds-agent:6379
    volumes:
      - type: bind
        source: ./config/ocariot/vault/.tokens/access-token-ds-agent-service
        target: /tmp/access-token-ds-agent-service
    command: initializing_service.sh
    configs:
      - source: ocariot-init-service-config
        target: /usr/bin/initializing_service.sh
        mode: 0100
    secrets:
      - source: vault-ca-cert
        target: /tmp/vault/ca.crt
        mode: 0400
    depends_on:
      - psmdb-ds-agent
      - redis-ds-agent
      - rabbitmq
      - vault
    networks:
      - ocariot
    logging:
      driver: json-file
      options:
        max-size: 100m

  quest:
    hostname: quest-service
    image: ocariot/quest:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 15s
        max_attempts: 15
    environment:
      - VAULT_BASE_URL=https://vault:8200
      - NODE_ENV=production
      - PROTOCOL=https
      - PORT=6001
    volumes:
      - type: bind
        source: ./config/ocariot/vault/.tokens/access-token-quest-service
        target: /tmp/access-token-quest-service
    command: initializing_service.sh
    configs:
      - source: ocariot-init-service-config
        target: /usr/bin/initializing_service.sh
        mode: 0100
    secrets:
      - source: vault-ca-cert
        target: /tmp/vault/ca.crt
        mode: 0400
    depends_on:
      - psmdb-quest
      - rabbitmq
      - vault
    networks:
      - ocariot
    logging:
      driver: json-file
      options:
        max-size: 100m

  gamification:
    hostname: gamification-service
    image: ocariot/gamification:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 15s
        max_attempts: 15
    environment:
      - VAULT_BASE_URL=https://vault:8200
      - NODE_ENV=production
      - PROTOCOL=https
      - PORT=7001
    volumes:
      - type: bind
        source: ./config/ocariot/vault/.tokens/access-token-gamification-service
        target: /tmp/access-token-gamification-service
    command: initializing_service.sh
    configs:
      - source: ocariot-init-service-config
        target: /usr/bin/initializing_service.sh
        mode: 0100
    secrets:
      - source: vault-ca-cert
        target: /tmp/vault/ca.crt
        mode: 0400
    depends_on:
      - psmdb-gamification
      - rabbitmq
      - vault
    networks:
      - ocariot
    logging:
      driver: json-file
      options:
        max-size: 100m

  food:
    hostname: food-service
    image: ocariot/food:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 15s
        max_attempts: 15
    environment:
      - VAULT_BASE_URL=https://vault:8200
      - NODE_ENV=production
      - PROTOCOL=https
      - PORT=8001
    volumes:
      - type: bind
        source: ./config/ocariot/vault/.tokens/access-token-food-service
        target: /tmp/access-token-food-service
    command: initializing_service.sh
    configs:
      - source: ocariot-init-service-config
        target: /usr/bin/initializing_service.sh
        mode: 0100
    secrets:
      - source: vault-ca-cert
        target: /tmp/vault/ca.crt
        mode: 0400
    depends_on:
      - psmdb-food
      - rabbitmq
      - vault
    networks:
      - ocariot
    logging:
      driver: json-file
      options:
        max-size: 100m

  notification: # Container for OCARIoT Notification service
    hostname: notification-service
    image: ocariot/notification:latest
    user: root
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 15s
        max_attempts: 15
    environment:
      - VAULT_BASE_URL=https://vault:8200
      - NODE_ENV=production
      - PORT_HTTPS=10001
      - GOOGLE_APPLICATION_CREDENTIALS=/etc/keys/firebase_keyfile.json
      - RABBITMQ_SSL=true
    volumes:
      - ${FIREBASE_KEYFILE_PATH}:/etc/keys/firebase_keyfile.json:ro
      - type: bind
        source: ./config/ocariot/vault/.tokens/access-token-notification-service
        target: /tmp/access-token-notification-service
    entrypoint: initializing_service.sh
    configs:
      - source: ocariot-init-service-config
        target: /usr/bin/initializing_service.sh
        mode: 0100
    secrets:
      - source: vault-ca-cert
        target: /tmp/vault/ca.crt
        mode: 0400
    depends_on:
      - psmdb-notification
      - rabbitmq
      - vault
    networks:
      - ocariot
    logging:
      driver: json-file
      options:
        max-size: 100m

  missions:
    hostname: missions-service
    image: ocariot/missions:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 15s
        max_attempts: 15
    environment:
      - VAULT_BASE_URL=https://vault:8200
      - NODE_ENV=development
      - PORT=8000
      - SSL_PORT=8001
      - DATABASE_DIALECT=mysql
      - DATABASE_HOST=psmysql-missions
      - DATABASE_PORT=3306
      - DATABASE_SSL=true
      - UPLOAD_VOLUME=/files/
    volumes:
      - type: bind
        source: ./config/ocariot/vault/.tokens/access-token-missions-service
        target: /tmp/access-token-missions-service
    command: initializing_service.sh
    configs:
      - source: ocariot-init-service-config
        target: /usr/bin/initializing_service.sh
        mode: 0100
    secrets:
      - source: vault-ca-cert
        target: /tmp/vault/ca.crt
        mode: 0400
    depends_on:
      - psmysql-missions
      - rabbitmq
      - vault
    networks:
      - ocariot
    logging:
      driver: json-file
      options:
        max-size: 100m

  rabbitmq:
    hostname: rabbitmq
    image: ocariot/rabbitmq:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: any
        delay: 15s
        max_attempts: 15
    environment:
      - VAULT_BASE_URL=https://vault:8200
    entrypoint: initializing_rabbitmq.sh
    volumes:
      - type: volume
        source: rabbitmq-data
        target: /var/lib/rabbitmq
      - type: bind
        source: ./config/ocariot/vault/.tokens/access-token-rabbitmq
        target: /tmp/access-token-rabbitmq
    configs:
      - source: ocariot-init-rabbitmq-config
        target: /usr/bin/initializing_rabbitmq.sh
        mode: 0100
      - source: ocariot-rabbitmq-conf
        target: /etc/rabbitmq/rabbitmq.conf
        mode: 0400
    secrets:
      - source: vault-ca-cert
        target: /tmp/vault/ca.crt
        mode: 0400
    depends_on:
      - vault
    networks:
      - ocariot
    logging:
      driver: json-file
      options:
        max-size: 100m

secrets:
  vault-server-key:
    file: config/ocariot/vault/.certs/server.key
  vault-server-cert:
    file: config/ocariot/vault/.certs/server.crt
  vault-ca-cert:
    file: config/ocariot/vault/.certs/ca.crt
  consul-server-key:
    file: config/ocariot/consul/.certs/server.key
  consul-server-cert:
    file: config/ocariot/consul/.certs/server.crt
  consul-ca-cert:
    file: config/ocariot/consul/.certs/ca.crt
  consul-client-key:
    file: config/ocariot/consul/.certs/consul_client.key
  consul-client-cert:
    file: config/ocariot/consul/.certs/consul_client.crt
  api-gateway-server-key:
    file: ${AG_KEY_PATH}
  api-gateway-server-cert:
    file: ${AG_CERT_PATH}

configs:
  ocariot-vault-config:
    file: config/ocariot/vault/config.hcl
  ocariot-consul-config:
    file: config/ocariot/consul/config.json
  ocariot-rabbitmq-conf:
    file: config/ocariot/rabbitmq/rabbitmq.conf
  ocariot-mongo-config:
    file: config/ocariot/psmdb/mongod.conf
  ocariot-mysql-config:
    file: config/ocariot/psmysql/my.cnf
  ocariot-redis-config:
    file: config/ocariot/redisdb/redis.conf
  ocariot-create-token-vault-config:
    file: config/ocariot/vault/scripts/create_tokens.sh
  ocariot-remove-token-vault-config:
    file: config/ocariot/vault/scripts/remove_tokens.sh
  ocariot-init-vault-config:
    file: config/ocariot/vault/scripts/initializing_vault.sh
  ocariot-init-rabbitmq-config:
    file: config/ocariot/rabbitmq/scripts/initializing_rabbitmq.sh
  ocariot-init-service-config:
    file: config/ocariot/service/scripts/initializing_service.sh
  ocariot-init-psmdb-config:
    file: config/ocariot/psmdb/scripts/initializing_psmdb.sh
  ocariot-init-psmysql-config:
    file: config/ocariot/psmysql/scripts/initializing_psmysql.sh
  ocariot-init-api-gateway-config:
    file: config/ocariot/api-gateway/scripts/initializing_api_gateway.sh

volumes:
  psmdb-account-data:
    name: ocariot-psmdb-account-data
  psmdb-ds-agent-data:
    name: ocariot-psmdb-ds-agent-data
  psmdb-iot-tracking-data:
    name: ocariot-psmdb-iot-tracking-data
  psmdb-food-data:
    name: ocariot-psmdb-food-data
  psmdb-quest-data:
    name: ocariot-psmdb-quest-data
  psmdb-gamification-data:
    name: ocariot-psmdb-gamification-data
  psmdb-notification-data:
    name: ocariot-psmdb-notification-data
  psmysql-missions-data:
    name: ocariot-psmysql-missions-data
  consul-data:
    name: ocariot-consul-data
  rabbitmq-data:
    name: ocariot-rabbitmq-data
  redis-api-gateway-data:
    name: ocariot-redis-api-gateway-data
  redis-ds-agent-data:
    name: ocariot-redis-ds-agent-data

networks:
  ocariot:
    external: true
    name: ocariot
    driver: overlay
    driver_opts:
      encrypted: "true"
